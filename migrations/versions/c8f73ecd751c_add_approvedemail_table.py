"""Add ApprovedEmail table

Revision ID: c8f73ecd751c
Revises: 
Create Date: 2025-09-10 00:45:37.819640

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'c8f73ecd751c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('approved_emails',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('added_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    with op.batch_alter_table('opportunity', schema=None) as batch_op:
        batch_op.alter_column('comments',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True,
               existing_server_default=sa.text("'[]'::jsonb"))
        batch_op.alter_column('qualifications',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               type_=sa.JSON(),
               existing_nullable=True,
               existing_server_default=sa.text("'[]'::jsonb"))
        batch_op.alter_column('recurring',
               existing_type=sa.TEXT(),
               type_=sa.String(),
               nullable=False,
               existing_server_default=sa.text("'once'::text"))

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('car_seats',
               existing_type=sa.INTEGER(),
               nullable=False,
               existing_server_default=sa.text('0'))

    with op.batch_alter_table('user_opportunity', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('user_opportunity_opportunity_id_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('user_opportunity_user_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'user', ['user_id'], ['id'])
        batch_op.create_foreign_key(None, 'opportunity', ['opportunity_id'], ['id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('user_opportunity', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('user_opportunity_user_id_fkey'), 'user', ['user_id'], ['id'], ondelete='CASCADE')
        batch_op.create_foreign_key(batch_op.f('user_opportunity_opportunity_id_fkey'), 'opportunity', ['opportunity_id'], ['id'], ondelete='CASCADE')

    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.alter_column('car_seats',
               existing_type=sa.INTEGER(),
               nullable=True,
               existing_server_default=sa.text('0'))

    with op.batch_alter_table('opportunity', schema=None) as batch_op:
        batch_op.alter_column('recurring',
               existing_type=sa.String(),
               type_=sa.TEXT(),
               nullable=True,
               existing_server_default=sa.text("'once'::text"))
        batch_op.alter_column('qualifications',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True,
               existing_server_default=sa.text("'[]'::jsonb"))
        batch_op.alter_column('comments',
               existing_type=sa.JSON(),
               type_=postgresql.JSONB(astext_type=sa.Text()),
               existing_nullable=True,
               existing_server_default=sa.text("'[]'::jsonb"))

    op.drop_table('approved_emails')
    # ### end Alembic commands ###
