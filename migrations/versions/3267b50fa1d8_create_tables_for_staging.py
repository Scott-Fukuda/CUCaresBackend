"""create tables for staging

Revision ID: 3267b50fa1d8
Revises: 4c3fab48e1d5
Create Date: 2025-10-30 10:28:33.285333

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '3267b50fa1d8'
down_revision = '4c3fab48e1d5'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('approved_emails',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('added_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('profile_image', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('interests', sa.JSON(), nullable=True),
    sa.Column('admin', sa.Boolean(), nullable=False),
    sa.Column('gender', sa.String(), nullable=True),
    sa.Column('graduation_year', sa.String(), nullable=True),
    sa.Column('academic_level', sa.String(), nullable=True),
    sa.Column('major', sa.String(), nullable=True),
    sa.Column('birthday', sa.DateTime(), nullable=True),
    sa.Column('car_seats', sa.Integer(), nullable=False),
    sa.Column('bio', sa.String(), nullable=True),
    sa.Column('registration_date', sa.DateTime(), nullable=False),
    sa.Column('carpool_waiver_signed', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('friendship',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('accepted', sa.Boolean(), nullable=False),
    sa.Column('requester_id', sa.Integer(), nullable=False),
    sa.Column('receiver_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['receiver_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['requester_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('organization',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('member_count', sa.Integer(), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('approved', sa.Boolean(), nullable=True),
    sa.Column('date_created', sa.String(), nullable=True),
    sa.Column('host_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['host_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('opportunity',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('date', sa.DateTime(), nullable=False),
    sa.Column('duration', sa.Integer(), nullable=False),
    sa.Column('causes', sa.JSON(), nullable=True),
    sa.Column('tags', sa.JSON(), nullable=True),
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('nonprofit', sa.String(), nullable=True),
    sa.Column('total_slots', sa.Integer(), nullable=True),
    sa.Column('image', sa.String(), nullable=True),
    sa.Column('approved', sa.Boolean(), nullable=False),
    sa.Column('host_org_name', sa.String(), nullable=True),
    sa.Column('comments', sa.JSON(), nullable=True),
    sa.Column('qualifications', sa.JSON(), nullable=True),
    sa.Column('recurring', sa.String(), nullable=False),
    sa.Column('visibility', sa.JSON(), nullable=True),
    sa.Column('attendance_marked', sa.Boolean(), nullable=True),
    sa.Column('redirect_url', sa.String(), nullable=True),
    sa.Column('actual_runtime', sa.Integer(), nullable=True),
    sa.Column('host_org_id', sa.Integer(), nullable=True),
    sa.Column('host_user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['host_org_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['host_user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_organization',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'organization_id')
    )
    op.create_table('waiver',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('typed_name', sa.String(), nullable=False),
    sa.Column('signed_at', sa.DateTime(), nullable=False),
    sa.Column('type', sa.String(), nullable=False),
    sa.Column('content', sa.String(), nullable=False),
    sa.Column('ip_address', sa.String(), nullable=False),
    sa.Column('checked_consent', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('organization_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['organization_id'], ['organization.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_opportunity',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('opportunity_id', sa.Integer(), nullable=False),
    sa.Column('registered', sa.Boolean(), nullable=True),
    sa.Column('attended', sa.Boolean(), nullable=True),
    sa.Column('driving', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['opportunity_id'], ['opportunity.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'opportunity_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_opportunity')
    op.drop_table('waiver')
    op.drop_table('user_organization')
    op.drop_table('opportunity')
    op.drop_table('organization')
    op.drop_table('friendship')
    op.drop_table('user')
    op.drop_table('approved_emails')
    # ### end Alembic commands ###
